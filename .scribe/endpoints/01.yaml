name: Users
description: 'Endpoints related to user management.'
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      custom: []
      groupName: Users
      groupDescription: 'Endpoints related to user management.'
      subgroup: ''
      subgroupDescription: ''
      title: 'List users'
      description: 'Get a paginated list of users.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        custom: []
        name: per_page
        description: 'Number of users per page (1â€“100).'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      'filter[name]':
        custom: []
        name: 'filter[name]'
        description: 'Filter users by exact name.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      'filter[email]':
        custom: []
        name: 'filter[email]'
        description: 'Filter users by exact email.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      sort:
        custom: []
        name: sort
        description: 'Sort by name (e.g. "sort=name" or "sort=-name").'
        required: true
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanQueryParameters:
      per_page: 10
      'filter[name]': 'John Doe'
      'filter[email]': john@example.com
      sort: name
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: '{"data":[{"id":1,"name":"John Doe","email":"john@example.com","created_at":"2025-10-27T12:00:00Z","updated_at":"2025-10-27T12:00:00Z"}],"meta":{"current_page":1,"last_page":10,"per_page":10,"total":100}}'
        headers: []
        description: 'Successful response with paginated users.'
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      custom: []
      groupName: Users
      groupDescription: 'Endpoints related to user management.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user'
      description: 'Creates a new user and returns the created resource. Requires authentication.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        custom: []
        name: name
        description: "The user's full name."
        required: true
        example: 'Alice Example'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      email:
        custom: []
        name: email
        description: "The user's email address."
        required: true
        example: alice@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: "The user's password."
        required: true
        example: P@ssw0rd!23
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      name: 'Alice Example'
      email: alice@example.com
      password: P@ssw0rd!23
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: '{"data":{"id":1,"name":"Alice Example","email":"alice@example.com","created_at":"2025-10-27T12:00:00Z","updated_at":"2025-10-27T12:00:00Z"}}'
        headers: []
        description: 'User created successfully.'
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: Unauthorized.
      -
        custom: []
        status: 422
        content: '{"message":"The given data was invalid.","errors":{"email":["The email has already been taken."]}}'
        headers: []
        description: 'Validation error.'
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
